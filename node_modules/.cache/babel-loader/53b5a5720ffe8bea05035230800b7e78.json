{"ast":null,"code":"const copyArr = require('../rules/arrayCopy');\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n  let tmpArr;\n  tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n  let check3By3Arr = [];\n\n  for (let i = 0; i < lineNum; i++) {\n    for (let j = 0; j < lineNum; j++) {\n      if (tmpArr[i][j] === 1) {\n        // 체크 지점에 반드시 흑돌이 놓여 있어야 함\n        for (let i = 0; i < 4; i++) {\n          check3By3Arr[i] = 1;\n        }\n\n        for (let depth = 0; depth < 3; depth++) {\n          if (tmpArr[i - depth][j] !== undefined) {\n            check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j]; // Up\n          }\n\n          if (tmpArr[i + depth][j] !== undefined) {\n            check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j]; // Down\n          }\n\n          if (tmpArr[i - depth][j + depth] !== undefined) {\n            check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth]; // Right Up\n          }\n\n          if (tmpArr[i + depth][j - depth] !== undefined) {\n            check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth]; // Left Down\n          }\n\n          if (tmpArr[i][j + depth] !== undefined) {\n            check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth]; // Right\n          }\n\n          if (tmpArr[i][j - depth] !== undefined) {\n            check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth]; // Left\n          }\n\n          if (tmpArr[i + depth][j + depth] !== undefined) {\n            check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth]; // Right Down           \n          }\n\n          if (tmpArr[i - depth][j - depth] !== undefined) {\n            check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth]; // Left Up\n          }\n\n          const check3Num = check3By3Arr.filter(i => 3 === i).length;\n\n          if (check3Num === 3) {}\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js"],"names":["copyArr","require","exports","prohibit3by3","plateArr","lineNum","tmpArr","arrayCopy","check3By3Arr","i","j","depth","undefined","check3Num","filter","length"],"mappings":"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","sourcesContent":["const copyArr = require('../rules/arrayCopy')\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n    let tmpArr;\n    tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n    let check3By3Arr = [];\n    for (let i = 0; i < lineNum; i++) {\n        for (let j = 0; j < lineNum; j++) {\n            if(tmpArr[i][j]===1){   // 체크 지점에 반드시 흑돌이 놓여 있어야 함\n                for (let i = 0; i < 4; i++) {\n                    check3By3Arr[i]=1;\n                }\n                for (let depth = 0; depth<3 ; depth++) {\n                    if(tmpArr[i- depth ][j]!==undefined){\n                        check3By3Arr[0]=check3By3Arr[0]+tmpArr[i- depth ][j] // Up\n                    } \n                    if(tmpArr[i+ depth ][j]!==undefined){\n                        check3By3Arr[0]=check3By3Arr[0]+tmpArr[i+ depth ][j] // Down\n                    } \n                    if(tmpArr[i- depth ][j+ depth ]!==undefined){\n                        check3By3Arr[1]=check3By3Arr[1]+tmpArr[i- depth ][j+ depth ] // Right Up\n                    } \n                    if(tmpArr[i+ depth ][j- depth ]!==undefined){\n                        check3By3Arr[1]=check3By3Arr[1]+tmpArr[i+ depth ][j- depth ] // Left Down\n                    } \n                    if(tmpArr[i][j+ depth ]!==undefined){\n                        check3By3Arr[2]=check3By3Arr[2]+tmpArr[i][j+ depth ] // Right\n                    } \n                    if(tmpArr[i][j- depth ]!==undefined){\n                        check3By3Arr[2]=check3By3Arr[2]+tmpArr[i][j- depth ] // Left\n                    } \n                    if(tmpArr[i+ depth ][j+ depth ]!==undefined){\n                        check3By3Arr[3]=check3By3Arr[3]+tmpArr[i+ depth ][j+ depth ] // Right Down           \n                    } \n                    if(tmpArr[i- depth ][j- depth ]!==undefined){\n                        check3By3Arr[3]=check3By3Arr[3]+tmpArr[i- depth ][j- depth ] // Left Up\n                    } \n                    const check3Num = check3By3Arr.filter(i=>3 === i).length;\n                    if(check3Num===3){\n\n                    }\n                }\n            }\n            \n        }        \n    }\n    \n    \n    \n    \n}"]},"metadata":{},"sourceType":"module"}