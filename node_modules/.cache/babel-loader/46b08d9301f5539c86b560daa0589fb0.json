{"ast":null,"code":"const copyArr = require('../rules/arrayCopy');\n\nexports.prohibit3by3 = (plateArr, lineNum, i, j) => {\n  let tmpArr;\n  tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n  let check3By3Arr = [];\n\n  for (let i = 0; i < 4; i++) {\n    check3By3Arr[i] = 1;\n  }\n\n  for (let depth = 1; depth < 4; depth++) {\n    if (i - depth >= 0) {\n      if (tmpArr[i - depth][j] === 1) {\n        check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j]; // Up\n      }\n    }\n\n    if (i + depth <= 14) {\n      if (tmpArr[i + depth][j] === 1) {\n        check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j]; // Down\n      }\n    }\n\n    if (i - depth >= 0 && j + depth <= 14) {\n      if (tmpArr[i - depth][j + depth] === 1) {\n        check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth]; // Right Up\n      }\n    }\n\n    if (i + depth <= 14 && j - depth >= 0) {\n      if (tmpArr[i + depth][j - depth] === 1) {\n        check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth]; // Left Down\n      }\n    }\n\n    if (j + depth <= 14) {\n      if (tmpArr[i][j + depth] === 1) {\n        check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth]; // Right\n      }\n    }\n\n    if (j - depth >= 0) {\n      if (tmpArr[i][j - depth] === 1) {\n        check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth]; // Left\n      }\n    }\n\n    if (i + depth <= 14 && j + depth <= 14) {\n      if (tmpArr[i + depth][j + depth] === 1) {\n        check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth]; // Right Down           \n      }\n    }\n\n    if (i - depth >= 0 && j - depth >= 0) {\n      if (tmpArr[i - depth][j - depth] === 1) {\n        check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth]; // Left Up\n      }\n    } // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n    // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n\n  }\n\n  let threeCnt = check3By3Arr.filter(element => element >= 3).length;\n  let threeState = Array.from(Array(4).fill(false));\n\n  if (threeCnt > 1) {\n    // 3 라인일 때\n    for (let q = 0; q < 4; q++) {\n      if (check3By3Arr[q] === 3) {\n        if (threeLineChk(tmpArr, q, i, j) === \"3By3\") {\n          threeState[q] = true;\n        } else if (threeLineChk(tmpArr, q, i, j) === \"none3By3\") {\n          threeState[q] = false;\n        }\n      }\n    } // 4 라인일 떄 \n\n  }\n\n  console.log(threeState);\n\n  if (threeState.filter(i => i === true).length >= 2) {\n    return \"prohibit\";\n  } // if(threeCnt>1) {\n  //     \n  //     // console.log(threeState);\n  //     // console.log(threeState.find(element=>element===0));\n  //     if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }\n  // }\n\n};\n\nexports.prohibit4By4 = (plateArr, lineNum, i, j) => {\n  let tmpArr;\n  tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n  let check4By4Arr = [];\n\n  for (let x = 0; x < 4; x++) {\n    check4By4Arr[x] = fourBlackCnt(tmpArr, x, i, j);\n  }\n};\n\nfunction threeLineChk(arr, line, i, j) {\n  // line 은 방향\n  if (line === 0) {\n    let blackCnt = 0;\n    let firstBlack = [];\n    let lastBlack = [];\n    let tmpBlackArr = [];\n\n    for (let x = 0; x < 7; x++) {\n      // 위에서부터 차례로\n      if (i - 3 + x >= 0 && i - 3 + x <= 14) {\n        // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n        if (arr[i - 3 + x][j] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1 && arr[i - 3 + x][j] === 1) {\n          firstBlack = [i - 3 + x, j];\n        }\n\n        if (blackCnt === 3 && arr[i - 3 + x][j] === 1) {\n          lastBlack = [i - 3 + x, j];\n        }\n      }\n    }\n\n    for (let y = 0; y < lastBlack[0] - firstBlack[0] + 1; y++) {\n      tmpBlackArr[y] = arr[firstBlack[0] + y][firstBlack[1]];\n    }\n\n    if (tmpBlackArr.length <= 4) {\n      // 4칸 이\n      if (tmpBlackArr.filter(i => i === -1).length === 1) {\n        return \"none3By3\";\n      } else {\n        if (firstBlack[0] - 1 < 0 || lastBlack[0] + 1 > 14) {\n          // 3개 놓은 돌 중에 위아래가 벽인 경우\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] - 1][firstBlack[1]] === -1 || arr[lastBlack[0] + 1][lastBlack[1]] === -1) {\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] - 1][firstBlack[1]] === 0 && arr[lastBlack[0] + 1][lastBlack[1]] === 0) {\n          return \"3By3\";\n        }\n      }\n    } else {\n      return \"none3By3\";\n    }\n  } else if (line === 1) {\n    let blackCnt = 0;\n    let firstBlack = [];\n    let lastBlack = [];\n    let tmpBlackArr = [];\n\n    for (let x = 0; x < 7; x++) {\n      // 위에서부터 차례로\n      if (i - 3 + x >= 0 && i - 3 + x <= 14 && j + 3 - x >= 0 && j + 3 - x <= 14) {\n        // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n        if (arr[i - 3 + x][j + 3 - x] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1 && arr[i - 3 + x][j + 3 - x] === 1) {\n          firstBlack = [i - 3 + x, j + 3 - x];\n        }\n\n        if (blackCnt === 3 && arr[i - 3 + x][j + 3 - x] === 1) {\n          lastBlack = [i - 3 + x, j + 3 - x];\n        }\n      }\n    }\n\n    for (let y = 0; y < lastBlack[0] - firstBlack[0] + 1; y++) {\n      tmpBlackArr[y] = arr[firstBlack[0] + y][firstBlack[1] - y];\n    }\n\n    if (tmpBlackArr.length <= 4) {\n      // 4칸 이\n      if (tmpBlackArr.filter(i => i === -1).length === 1) {\n        return \"none3By3\";\n      } else {\n        if (firstBlack[0] - 1 < 0 && firstBlack[1] + 1 > 14 || lastBlack[0] + 1 > 14 && lastBlack[0] - 1 < 0) {\n          // 3개 놓은 돌 중에 위아래가 벽인 경우\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] - 1][firstBlack[1] + 1] === -1 || arr[lastBlack[0] + 1][lastBlack[1] - 1] === -1) {\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] - 1][firstBlack[1] + 1] === 0 && arr[lastBlack[0] + 1][lastBlack[1] - 1] === 0) {\n          return \"3By3\";\n        }\n      }\n    } else {\n      return \"none3By3\";\n    }\n  } else if (line === 2) {\n    let blackCnt = 0;\n    let firstBlack = [];\n    let lastBlack = [];\n    let tmpBlackArr = [];\n\n    for (let x = 0; x < 7; x++) {\n      // 위에서부터 차례로\n      if (j + 3 - x >= 0 && j + 3 - x <= 14) {\n        // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n        if (arr[i][j + 3 - x] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1 && arr[i][j + 3 - x] === 1) {\n          firstBlack = [i, j + 3 - x];\n        }\n\n        if (blackCnt === 3 && arr[i][j + 3 - x] === 1) {\n          lastBlack = [i, j + 3 - x];\n        }\n      }\n    }\n\n    console.log(firstBlack, lastBlack);\n\n    for (let x = 0; x < firstBlack[1] - lastBlack[1] + 1; x++) {\n      tmpBlackArr[x] = arr[firstBlack[0]][firstBlack[1] - x];\n    }\n\n    console.log(tmpBlackArr);\n\n    if (tmpBlackArr.length <= 4) {\n      // 4칸 이\n      if (tmpBlackArr.filter(i => i === -1).length === 1) {\n        return \"none3By3\";\n      } else {\n        if (firstBlack[1] + 1 > 14 || lastBlack[1] - 1 < 0) {\n          // 3개 놓은 돌 중에 위아래가 벽인 경우\n          return \"none3By3\";\n        } else if (arr[firstBlack[0]][firstBlack[1] + 1] === -1 || arr[lastBlack[0]][lastBlack[1] - 1] === -1) {\n          return \"none3By3\";\n        } else if (arr[firstBlack[0]][firstBlack[1] + 1] === 0 && arr[lastBlack[0]][lastBlack[1] - 1] === 0) {\n          return \"3By3\";\n        }\n      }\n    } else {\n      return \"none3By3\";\n    }\n  } else if (line === 3) {\n    let blackCnt = 0;\n    let firstBlack = [];\n    let lastBlack = [];\n    let tmpBlackArr = [];\n\n    for (let x = 0; x < 7; x++) {\n      // 위에서부터 차례로\n      if (i + 3 - x >= 0 && i + 3 - x <= 14 && j + 3 - x >= 0 && j + 3 - x <= 14) {\n        // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n        if (arr[i + 3 - x][j + 3 - x] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1 && arr[i + 3 - x][j + 3 - x]) {\n          firstBlack = [i + 3 - x, j + 3 - x];\n        }\n\n        if (blackCnt === 3 && arr[i + 3 - x][j + 3 - x]) {\n          lastBlack = [i + 3 - x, j + 3 - x];\n        }\n      }\n    }\n\n    for (let y = 0; y < lastBlack[0] - firstBlack[0] + 1; y++) {\n      tmpBlackArr[y] = arr[firstBlack[0] - y][firstBlack[1] - y];\n    }\n\n    if (tmpBlackArr.length <= 4) {\n      // 4칸 이\n      if (tmpBlackArr.filter(i => i === -1).length === 1) {\n        return \"none3By3\";\n      } else {\n        if (firstBlack[0] + 1 > 14 && firstBlack[1] + 1 > 14 || lastBlack[0] - 1 < 0 && lastBlack[0] - 1 < 0) {\n          // 3개 놓은 돌 중에 위아래가 벽인 경우\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] + 1][firstBlack[1] + 1] === -1 || arr[lastBlack[0] - 1][lastBlack[1] - 1] === -1) {\n          return \"none3By3\";\n        } else if (arr[firstBlack[0] + 1][firstBlack[1] + 1] === 0 && arr[lastBlack[0] - 1][lastBlack[1] - 1] === 0) {\n          return \"3By3\";\n        }\n      }\n    } else {\n      return \"none3By3\";\n    }\n  }\n}\n\nfunction fourBlackCnt(arr, line, i, j) {\n  // 착수지점 기준으로 4방향의 배열에서 흑돌이 갯수 측정\n  if (line === 0) {\n    let firstBlack = [];\n    let lastBlack = [];\n    let blackCnt = 0;\n\n    for (let k = -4; k <= 4; k++) {\n      if (i + k >= 0 && i + k <= 14) {\n        // UP to DOWN : i 의 범위는 0~14까지만 가능\n        if (arr[i + k][j] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1 && arr[i + k][j]) {\n          firstBlack = [i + k, j];\n        }\n\n        if (blackCnt === 4 && arr[i + k][j]) {\n          lastBlack = [i + k][j];\n        }\n      }\n    }\n\n    return blackCnt;\n  } else if (line === 1) {\n    let firstBlack = [];\n    let lastBlack = [];\n    let blackCnt = 0;\n\n    for (let k = -4; k <= 4; k++) {\n      if (i + k >= 0 && i + k <= 14 && j - k >= 0 && j - k <= 14) {\n        // RIGHT_UP to LEFT_DOWN : i 의 범위는 0~14까지만 가능\n        if (arr[i + k][j - k] === 1) {\n          blackCnt++;\n        }\n      }\n    }\n\n    return blackCnt;\n  } else if (line === 2) {\n    let firstBlack = [];\n    let lastBlack = [];\n    let blackCnt = 0;\n\n    for (let k = -4; k <= 4; k++) {\n      if (j + k >= 0 && j + k <= 14) {\n        // DOWN TO UP : i 의 범위는 0~14까지만 가능\n        if (arr[i][j - k] === 1) {\n          blackCnt++;\n        }\n      }\n    }\n\n    return blackCnt;\n  } else if (line === 3) {\n    let firstBlack = [];\n    let lastBlack = [];\n    let blackCnt = 0;\n\n    for (let k = -4; k <= 4; k++) {\n      if (i - k >= 0 && i - k <= 14 && j - k >= 0 && j - k <= 14) {\n        // RIGHT_DOWN to LEFT_UP : i 의 범위는 0~14까지만 가능\n        if (arr[i][j + k] === 1) {\n          blackCnt++;\n        }\n      }\n    }\n\n    return blackCnt;\n  }\n}","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js"],"names":["copyArr","require","exports","prohibit3by3","plateArr","lineNum","i","j","tmpArr","arrayCopy","check3By3Arr","depth","threeCnt","filter","element","length","threeState","Array","from","fill","q","threeLineChk","console","log","prohibit4By4","check4By4Arr","x","fourBlackCnt","arr","line","blackCnt","firstBlack","lastBlack","tmpBlackArr","y","k"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AAEAC,OAAO,CAACC,YAAR,GAAuB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,CAApB,EAAuBC,CAAvB,KAA6B;AAChD,MAAIC,MAAJ;AACAA,EAAAA,MAAM,GAAGR,OAAO,CAACS,SAAR,CAAkBL,QAAlB,EAA4BI,MAA5B,EAAoCH,OAApC,CAAT;AACA,MAAIK,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBI,IAAAA,YAAY,CAACJ,CAAD,CAAZ,GAAkB,CAAlB;AACH;;AACD,OAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACpC,QAAIL,CAAC,GAAGK,KAAJ,IAAa,CAAjB,EAAoB;AAChB,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAlB,MAAyB,CAA7B,EAAgC;AAC5BG,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAlB,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAID,CAAC,GAAGK,KAAJ,IAAa,EAAjB,EAAqB;AACjB,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAlB,MAAyB,CAA7B,EAAgC;AAC5BG,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAlB,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAID,CAAC,GAAGK,KAAJ,IAAa,CAAb,IAAkBJ,CAAC,GAAGI,KAAJ,IAAa,EAAnC,EAAuC;AACnC,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,MAAiC,CAArC,EAAwC;AACpCD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAIL,CAAC,GAAGK,KAAJ,IAAa,EAAb,IAAmBJ,CAAC,GAAGI,KAAJ,IAAa,CAApC,EAAuC;AACnC,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,MAAiC,CAArC,EAAwC;AACpCD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAIJ,CAAC,GAAGI,KAAJ,IAAa,EAAjB,EAAqB;AACjB,UAAIH,MAAM,CAACF,CAAD,CAAN,CAAUC,CAAC,GAAGI,KAAd,MAAyB,CAA7B,EAAgC;AAC5BD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAD,CAAN,CAAUC,CAAC,GAAGI,KAAd,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAIJ,CAAC,GAAGI,KAAJ,IAAa,CAAjB,EAAoB;AAChB,UAAIH,MAAM,CAACF,CAAD,CAAN,CAAUC,CAAC,GAAGI,KAAd,MAAyB,CAA7B,EAAgC;AAC5BD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAD,CAAN,CAAUC,CAAC,GAAGI,KAAd,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAIL,CAAC,GAAGK,KAAJ,IAAa,EAAb,IAAmBJ,CAAC,GAAGI,KAAJ,IAAa,EAApC,EAAwC;AACpC,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,MAAiC,CAArC,EAAwC;AACpCD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAIL,CAAC,GAAGK,KAAJ,IAAa,CAAb,IAAkBJ,CAAC,GAAGI,KAAJ,IAAa,CAAnC,EAAsC;AAClC,UAAIH,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,MAAiC,CAArC,EAAwC;AACpCD,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACF,CAAC,GAAGK,KAAL,CAAN,CAAkBJ,CAAC,GAAGI,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ,KAhDmC,CAiDpC;AACA;;AACH;;AACD,MAAIC,QAAQ,GAAGF,YAAY,CAACG,MAAb,CAAoBC,OAAO,IAAIA,OAAO,IAAI,CAA1C,EAA6CC,MAA5D;AAEA,MAAIC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAL,CAASE,IAAT,CAAc,KAAd,CAAX,CAAjB;;AACA,MAAIP,QAAQ,GAAG,CAAf,EAAkB;AACd;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAGV,YAAY,CAACU,CAAD,CAAZ,KAAkB,CAArB,EAAuB;AACnB,YAAGC,YAAY,CAACb,MAAD,EAASY,CAAT,EAAYd,CAAZ,EAAeC,CAAf,CAAZ,KAAgC,MAAnC,EAA0C;AACtCS,UAAAA,UAAU,CAACI,CAAD,CAAV,GAAc,IAAd;AACH,SAFD,MAEM,IAAGC,YAAY,CAACb,MAAD,EAASY,CAAT,EAAYd,CAAZ,EAAeC,CAAf,CAAZ,KAAgC,UAAnC,EAA8C;AAChDS,UAAAA,UAAU,CAACI,CAAD,CAAV,GAAc,KAAd;AACH;AACJ;AACJ,KAVa,CAWd;;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AACA,MAAGA,UAAU,CAACH,MAAX,CAAkBP,CAAC,IAAEA,CAAC,KAAG,IAAzB,EAA+BS,MAA/B,IAAuC,CAA1C,EAA4C;AACxC,WAAO,UAAP;AACH,GA9E+C,CA+EhD;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;;AACH,CA7FD;;AA+FAb,OAAO,CAACsB,YAAR,GAAuB,CAACpB,QAAD,EAAWC,OAAX,EAAoBC,CAApB,EAAuBC,CAAvB,KAA6B;AAChD,MAAIC,MAAJ;AACAA,EAAAA,MAAM,GAAGR,OAAO,CAACS,SAAR,CAAkBL,QAAlB,EAA4BI,MAA5B,EAAoCH,OAApC,CAAT;AACA,MAAIoB,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,IAAAA,YAAY,CAACC,CAAD,CAAZ,GAAgBC,YAAY,CAACnB,MAAD,EAASkB,CAAT,EAAYpB,CAAZ,EAAeC,CAAf,CAA5B;AACH;AAEJ,CARD;;AAUA,SAASc,YAAT,CAAsBO,GAAtB,EAA2BC,IAA3B,EAAiCvB,CAAjC,EAAoCC,CAApC,EAAuC;AAAE;AACrC,MAAIsB,IAAI,KAAK,CAAb,EAAgB;AACZ,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,UAAIpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,CAAb,IAAkBpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,EAAnC,EAAuC;AAAE;AAErC,YAAIE,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAf,MAAsB,CAA1B,EAA6B;AACzBuB,UAAAA,QAAQ;AACX;;AACD,YAAIA,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAf,MAAsB,CAA5C,EAA+C;AAC3CwB,UAAAA,UAAU,GAAG,CAACzB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAZ,CAAb;AACH;;AACD,YAAIuB,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAf,MAAsB,CAA5C,EAA+C;AAC3CyB,UAAAA,SAAS,GAAG,CAAC1B,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAZ,CAAZ;AACH;AACJ;AACJ;;AACD,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIF,SAAS,CAAC,CAAD,CAAT,GAAeD,UAAU,CAAC,CAAD,CAA1B,GAAiC,CAArD,EAAwDG,CAAC,EAAzD,EAA6D;AACzDD,MAAAA,WAAW,CAACC,CAAD,CAAX,GAAiBN,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgBG,CAAjB,CAAH,CAAuBH,UAAU,CAAC,CAAD,CAAjC,CAAjB;AACH;;AACD,QAAIE,WAAW,CAAClB,MAAZ,IAAsB,CAA1B,EAA6B;AAAE;AAC3B,UAAIkB,WAAW,CAACpB,MAAZ,CAAmBP,CAAC,IAAIA,CAAC,KAAK,CAAC,CAA/B,EAAkCS,MAAlC,KAA6C,CAAjD,EAAoD;AAChD,eAAO,UAAP;AACH,OAFD,MAEO;AACH,YAAIgB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAApB,IAAyBC,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,EAAhD,EAAoD;AAAE;AAClD,iBAAO,UAAP;AACH,SAFD,MAEO,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAjC,MAA0C,CAAC,CAA3C,IAAgDH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAA/B,MAAwC,CAAC,CAA7F,EAAgG;AACnG,iBAAO,UAAP;AACH,SAFM,MAEA,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAjC,MAA0C,CAA1C,IAA+CH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAA/B,MAAwC,CAA3F,EAA8F;AACjG,iBAAO,MAAP;AACH;AACJ;AACJ,KAZD,MAYO;AACH,aAAO,UAAP;AACH;AACJ,GArCD,MAqCO,IAAIH,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,UAAIpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,CAAb,IAAkBpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,EAA/B,IAAqCnB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,CAAlD,IAAuDnB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,EAAxE,EAA4E;AAAE;AAE1E,YAAIE,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,MAA8B,CAAlC,EAAqC;AACjCI,UAAAA,QAAQ;AACX;;AACD,YAAIA,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,MAA8B,CAApD,EAAuD;AACnDK,UAAAA,UAAU,GAAG,CAACzB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAC,GAAG,CAAJ,GAAQmB,CAApB,CAAb;AACH;;AACD,YAAII,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,MAA8B,CAApD,EAAuD;AACnDM,UAAAA,SAAS,GAAG,CAAC1B,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAC,GAAG,CAAJ,GAAQmB,CAApB,CAAZ;AACH;AACJ;AACJ;;AACD,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIF,SAAS,CAAC,CAAD,CAAT,GAAeD,UAAU,CAAC,CAAD,CAA1B,GAAiC,CAArD,EAAwDG,CAAC,EAAzD,EAA6D;AACzDD,MAAAA,WAAW,CAACC,CAAD,CAAX,GAAiBN,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgBG,CAAjB,CAAH,CAAuBH,UAAU,CAAC,CAAD,CAAV,GAAgBG,CAAvC,CAAjB;AACH;;AACD,QAAID,WAAW,CAAClB,MAAZ,IAAsB,CAA1B,EAA6B;AAAE;AAC3B,UAAIkB,WAAW,CAACpB,MAAZ,CAAmBP,CAAC,IAAIA,CAAC,KAAK,CAAC,CAA/B,EAAkCS,MAAlC,KAA6C,CAAjD,EAAoD;AAChD,eAAO,UAAP;AACH,OAFD,MAEO;AACH,YAAKgB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,CAApB,IAAyBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAA9C,IAAsDC,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,EAAnB,IAAyBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,CAAtG,EAA0G;AAAE;AACxG,iBAAO,UAAP;AACH,SAFD,MAEO,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,MAA8C,CAAC,CAA/C,IAAoDH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAArC,MAA4C,CAAC,CAArG,EAAwG;AAC3G,iBAAO,UAAP;AACH,SAFM,MAEA,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,MAA8C,CAA9C,IAAmDH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAArC,MAA4C,CAAnG,EAAsG;AACzG,iBAAO,MAAP;AACH;AACJ;AACJ,KAZD,MAYO;AACH,aAAO,UAAP;AACH;AACJ,GArCM,MAqCA,IAAIH,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,UAAInB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,CAAb,IAAkBnB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,EAAnC,EAAuC;AAAE;AAErC,YAAIE,GAAG,CAACtB,CAAD,CAAH,CAAOC,CAAC,GAAG,CAAJ,GAAQmB,CAAf,MAAsB,CAA1B,EAA6B;AACzBI,UAAAA,QAAQ;AACX;;AACD,YAAIA,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAD,CAAH,CAAOC,CAAC,GAAG,CAAJ,GAAQmB,CAAf,MAAsB,CAA5C,EAA+C;AAC3CK,UAAAA,UAAU,GAAG,CAACzB,CAAD,EAAIC,CAAC,GAAG,CAAJ,GAAQmB,CAAZ,CAAb;AACH;;AACD,YAAII,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAD,CAAH,CAAOC,CAAC,GAAG,CAAJ,GAAQmB,CAAf,MAAsB,CAA5C,EAA+C;AAC3CM,UAAAA,SAAS,GAAG,CAAC1B,CAAD,EAAIC,CAAC,GAAG,CAAJ,GAAQmB,CAAZ,CAAZ;AACH;AACJ;AACJ;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ,EAAwBC,SAAxB;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIK,UAAU,CAAC,CAAD,CAAV,GAAgBC,SAAS,CAAC,CAAD,CAA1B,GAAiC,CAArD,EAAwDN,CAAC,EAAzD,EAA6D;AACzDO,MAAAA,WAAW,CAACP,CAAD,CAAX,GAAiBE,GAAG,CAACG,UAAU,CAAC,CAAD,CAAX,CAAH,CAAmBA,UAAU,CAAC,CAAD,CAAV,GAAgBL,CAAnC,CAAjB;AACH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYU,WAAZ;;AACA,QAAIA,WAAW,CAAClB,MAAZ,IAAsB,CAA1B,EAA6B;AAAE;AAC3B,UAAIkB,WAAW,CAACpB,MAAZ,CAAmBP,CAAC,IAAIA,CAAC,KAAK,CAAC,CAA/B,EAAkCS,MAAlC,KAA6C,CAAjD,EAAoD;AAChD,eAAO,UAAP;AACH,OAFD,MAEO;AACH,YAAIgB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IAA0BC,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,CAAjD,EAAoD;AAAE;AAClD,iBAAO,UAAP;AACH,SAFD,MAEO,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAX,CAAH,CAAmBA,UAAU,CAAC,CAAD,CAAV,GAAc,CAAjC,MAAwC,CAAC,CAAzC,IAA8CH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAV,CAAH,CAAkBA,SAAS,CAAC,CAAD,CAAT,GAAa,CAA/B,MAAsC,CAAC,CAAzF,EAA4F;AAC/F,iBAAO,UAAP;AACH,SAFM,MAEA,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAX,CAAH,CAAmBA,UAAU,CAAC,CAAD,CAAV,GAAc,CAAjC,MAAwC,CAAxC,IAA6CH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAV,CAAH,CAAkBA,SAAS,CAAC,CAAD,CAAT,GAAa,CAA/B,MAAsC,CAAvF,EAA0F;AAC7F,iBAAO,MAAP;AACH;AACJ;AACJ,KAZD,MAYO;AACH,aAAO,UAAP;AACH;AACJ,GAvCM,MAuCA,IAAIH,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,UAAIpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,CAAb,IAAkBpB,CAAC,GAAG,CAAJ,GAAQoB,CAAR,IAAa,EAA/B,IAAqCnB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,CAAlD,IAAuDnB,CAAC,GAAG,CAAJ,GAAQmB,CAAR,IAAa,EAAxE,EAA4E;AAAE;AAE1E,YAAIE,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,MAA8B,CAAlC,EAAqC;AACjCI,UAAAA,QAAQ;AACX;;AACD,YAAIA,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,CAAtB,EAAiD;AAC7CK,UAAAA,UAAU,GAAG,CAACzB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAC,GAAG,CAAJ,GAAQmB,CAApB,CAAb;AACH;;AACD,YAAII,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG,CAAJ,GAAQoB,CAAT,CAAH,CAAenB,CAAC,GAAG,CAAJ,GAAQmB,CAAvB,CAAtB,EAAiD;AAC7CM,UAAAA,SAAS,GAAG,CAAC1B,CAAC,GAAG,CAAJ,GAAQoB,CAAT,EAAYnB,CAAC,GAAG,CAAJ,GAAQmB,CAApB,CAAZ;AACH;AACJ;AACJ;;AACD,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIF,SAAS,CAAC,CAAD,CAAT,GAAeD,UAAU,CAAC,CAAD,CAA1B,GAAiC,CAArD,EAAwDG,CAAC,EAAzD,EAA6D;AACzDD,MAAAA,WAAW,CAACC,CAAD,CAAX,GAAiBN,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgBG,CAAjB,CAAH,CAAuBH,UAAU,CAAC,CAAD,CAAV,GAAgBG,CAAvC,CAAjB;AACH;;AACD,QAAID,WAAW,CAAClB,MAAZ,IAAsB,CAA1B,EAA6B;AAAE;AAC3B,UAAIkB,WAAW,CAACpB,MAAZ,CAAmBP,CAAC,IAAIA,CAAC,KAAK,CAAC,CAA/B,EAAkCS,MAAlC,KAA6C,CAAjD,EAAoD;AAChD,eAAO,UAAP;AACH,OAFD,MAEO;AACH,YAAKgB,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAApB,IAA0BA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhB,GAAoB,EAA/C,IAAuDC,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,CAAnB,IAAwBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmB,CAAtG,EAA0G;AAAE;AACxG,iBAAO,UAAP;AACH,SAFD,MAEO,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,MAA8C,CAAC,CAA/C,IAAoDH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAArC,MAA4C,CAAC,CAArG,EAAwG;AAC3G,iBAAO,UAAP;AACH,SAFM,MAEA,IAAIJ,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,CAAH,CAAuBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAvC,MAA8C,CAA9C,IAAmDH,GAAG,CAACI,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,CAAH,CAAsBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAArC,MAA4C,CAAnG,EAAsG;AACzG,iBAAO,MAAP;AACH;AACJ;AACJ,KAZD,MAYO;AACH,aAAO,UAAP;AACH;AACJ;AACJ;;AAED,SAASL,YAAT,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCvB,CAAjC,EAAoCC,CAApC,EAAuC;AAAE;AACrC,MAAIsB,IAAI,KAAK,CAAb,EAAgB;AACZ,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIF,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI7B,CAAC,GAAG6B,CAAJ,IAAS,CAAT,IAAc7B,CAAC,GAAG6B,CAAJ,IAAS,EAA3B,EAA+B;AAAK;AAChC,YAAGP,GAAG,CAACtB,CAAC,GAAG6B,CAAL,CAAH,CAAW5B,CAAX,MAAgB,CAAnB,EAAqB;AACjBuB,UAAAA,QAAQ;AACX;;AACD,YAAGA,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG6B,CAAL,CAAH,CAAW5B,CAAX,CAArB,EAAmC;AAC/BwB,UAAAA,UAAU,GAAG,CAACzB,CAAC,GAAG6B,CAAL,EAAQ5B,CAAR,CAAb;AACH;;AACD,YAAGuB,QAAQ,KAAK,CAAb,IAAkBF,GAAG,CAACtB,CAAC,GAAG6B,CAAL,CAAH,CAAW5B,CAAX,CAArB,EAAmC;AAC/ByB,UAAAA,SAAS,GAAG,CAAC1B,CAAC,GAAG6B,CAAL,EAAQ5B,CAAR,CAAZ;AACH;AACJ;AACJ;;AACD,WAAOuB,QAAP;AACH,GAlBD,MAkBO,IAAID,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIF,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI7B,CAAC,GAAG6B,CAAJ,IAAS,CAAT,IAAc7B,CAAC,GAAG6B,CAAJ,IAAS,EAAvB,IAA6B5B,CAAC,GAAG4B,CAAJ,IAAS,CAAtC,IAA2C5B,CAAC,GAAG4B,CAAJ,IAAS,EAAxD,EAA6D;AAAK;AAC9D,YAAGP,GAAG,CAACtB,CAAC,GAAG6B,CAAL,CAAH,CAAW5B,CAAC,GAAG4B,CAAf,MAAoB,CAAvB,EAAyB;AACrBL,UAAAA,QAAQ;AACX;AACJ;AACJ;;AACD,WAAOA,QAAP;AACH,GAZM,MAYA,IAAID,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIF,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI5B,CAAC,GAAG4B,CAAJ,IAAS,CAAT,IAAc5B,CAAC,GAAG4B,CAAJ,IAAS,EAA3B,EAA+B;AAAK;AAChC,YAAGP,GAAG,CAACtB,CAAD,CAAH,CAAOC,CAAC,GAAG4B,CAAX,MAAgB,CAAnB,EAAqB;AACjBL,UAAAA,QAAQ;AACX;AACJ;AACJ;;AACD,WAAOA,QAAP;AACH,GAZM,MAYA,IAAID,IAAI,KAAK,CAAb,EAAgB;AACnB,QAAIE,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIF,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI7B,CAAC,GAAG6B,CAAJ,IAAS,CAAT,IAAc7B,CAAC,GAAG6B,CAAJ,IAAS,EAAvB,IAA6B5B,CAAC,GAAG4B,CAAJ,IAAS,CAAtC,IAA2C5B,CAAC,GAAG4B,CAAJ,IAAS,EAAxD,EAA4D;AAAK;AAC7D,YAAGP,GAAG,CAACtB,CAAD,CAAH,CAAOC,CAAC,GAAG4B,CAAX,MAAgB,CAAnB,EAAqB;AACjBL,UAAAA,QAAQ;AACX;AACJ;AACJ;;AACD,WAAOA,QAAP;AACH;AACJ","sourcesContent":["const copyArr = require('../rules/arrayCopy')\n\nexports.prohibit3by3 = (plateArr, lineNum, i, j) => {\n    let tmpArr;\n    tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n    let check3By3Arr = [];\n    for (let i = 0; i < 4; i++) {\n        check3By3Arr[i] = 1;\n    }\n    for (let depth = 1; depth < 4; depth++) {\n        if (i - depth >= 0) {\n            if (tmpArr[i - depth][j] === 1) {\n                check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j] // Up\n            }\n\n        }\n        if (i + depth <= 14) {\n            if (tmpArr[i + depth][j] === 1) {\n                check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j] // Down\n            }\n\n        }\n        if (i - depth >= 0 && j + depth <= 14) {\n            if (tmpArr[i - depth][j + depth] === 1) {\n                check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth] // Right Up\n            }\n\n        }\n        if (i + depth <= 14 && j - depth >= 0) {\n            if (tmpArr[i + depth][j - depth] === 1) {\n                check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth] // Left Down\n            }\n\n        }\n        if (j + depth <= 14) {\n            if (tmpArr[i][j + depth] === 1) {\n                check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth] // Right\n            }\n\n        }\n        if (j - depth >= 0) {\n            if (tmpArr[i][j - depth] === 1) {\n                check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth] // Left\n            }\n\n        }\n        if (i + depth <= 14 && j + depth <= 14) {\n            if (tmpArr[i + depth][j + depth] === 1) {\n                check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth] // Right Down           \n            }\n\n        }\n        if (i - depth >= 0 && j - depth >= 0) {\n            if (tmpArr[i - depth][j - depth] === 1) {\n                check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth] // Left Up\n            }\n\n        }\n        // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n        // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n    }\n    let threeCnt = check3By3Arr.filter(element => element >= 3).length;\n\n    let threeState = Array.from(Array(4).fill(false))\n    if (threeCnt > 1) {\n        // 3 라인일 때\n        for (let q = 0; q < 4; q++) {\n            if(check3By3Arr[q]===3){\n                if(threeLineChk(tmpArr, q, i, j)===\"3By3\"){\n                    threeState[q]=true\n                }else if(threeLineChk(tmpArr, q, i, j)===\"none3By3\"){\n                    threeState[q]=false\n                }\n            }            \n        }\n        // 4 라인일 떄 \n    }\n    console.log(threeState);\n    if(threeState.filter(i=>i===true).length>=2){\n        return \"prohibit\"\n    }\n    // if(threeCnt>1) {\n    //     \n    //     // console.log(threeState);\n    //     // console.log(threeState.find(element=>element===0));\n    //     if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }\n    // }\n}\n\nexports.prohibit4By4 = (plateArr, lineNum, i, j) => {\n    let tmpArr;\n    tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n    let check4By4Arr = [];\n    for (let x = 0; x < 4; x++) {\n        check4By4Arr[x]=fourBlackCnt(tmpArr, x, i, j);\n    }\n    \n}\n\nfunction threeLineChk(arr, line, i, j) { // line 은 방향\n    if (line === 0) {\n        let blackCnt = 0;\n        let firstBlack = [];\n        let lastBlack = [];\n        let tmpBlackArr = [];\n        for (let x = 0; x < 7; x++) { // 위에서부터 차례로\n            if (i - 3 + x >= 0 && i - 3 + x <= 14) { // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n\n                if (arr[i - 3 + x][j] === 1) {\n                    blackCnt++\n                }\n                if (blackCnt === 1 && arr[i - 3 + x][j] === 1) {\n                    firstBlack = [i - 3 + x, j]\n                }\n                if (blackCnt === 3 && arr[i - 3 + x][j] === 1) {\n                    lastBlack = [i - 3 + x, j]\n                }\n            }\n        }\n        for (let y = 0; y < (lastBlack[0] - firstBlack[0]) + 1; y++) {\n            tmpBlackArr[y] = arr[firstBlack[0] + y][firstBlack[1]]\n        }\n        if (tmpBlackArr.length <= 4) { // 4칸 이\n            if (tmpBlackArr.filter(i => i === -1).length === 1) {\n                return \"none3By3\"\n            } else {\n                if (firstBlack[0] - 1 < 0 || lastBlack[0] + 1 > 14) { // 3개 놓은 돌 중에 위아래가 벽인 경우\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] - 1][firstBlack[1]] === -1 || arr[lastBlack[0] + 1][lastBlack[1]] === -1) {\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] - 1][firstBlack[1]] === 0 && arr[lastBlack[0] + 1][lastBlack[1]] === 0) {\n                    return \"3By3\"\n                }\n            }\n        } else {\n            return \"none3By3\"\n        }\n    } else if (line === 1) {\n        let blackCnt = 0;\n        let firstBlack = [];\n        let lastBlack = [];\n        let tmpBlackArr = [];\n        for (let x = 0; x < 7; x++) { // 위에서부터 차례로\n            if (i - 3 + x >= 0 && i - 3 + x <= 14 && j + 3 - x >= 0 && j + 3 - x <= 14) { // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n\n                if (arr[i - 3 + x][j + 3 - x] === 1) {\n                    blackCnt++\n                }\n                if (blackCnt === 1 && arr[i - 3 + x][j + 3 - x] === 1) {\n                    firstBlack = [i - 3 + x, j + 3 - x]\n                }\n                if (blackCnt === 3 && arr[i - 3 + x][j + 3 - x] === 1) {\n                    lastBlack = [i - 3 + x, j + 3 - x]\n                }\n            }\n        }\n        for (let y = 0; y < (lastBlack[0] - firstBlack[0]) + 1; y++) {\n            tmpBlackArr[y] = arr[firstBlack[0] + y][firstBlack[1] - y]\n        }\n        if (tmpBlackArr.length <= 4) { // 4칸 이\n            if (tmpBlackArr.filter(i => i === -1).length === 1) {\n                return \"none3By3\"\n            } else {\n                if ((firstBlack[0] - 1 < 0 && firstBlack[1] + 1 > 14) || (lastBlack[0] + 1 > 14 && lastBlack[0] - 1 < 0)) { // 3개 놓은 돌 중에 위아래가 벽인 경우\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] - 1][firstBlack[1] + 1] === -1 || arr[lastBlack[0] + 1][lastBlack[1] - 1] === -1) {\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] - 1][firstBlack[1] + 1] === 0 && arr[lastBlack[0] + 1][lastBlack[1] - 1] === 0) {\n                    return \"3By3\"\n                }\n            }\n        } else {\n            return \"none3By3\"\n        }\n    } else if (line === 2) {\n        let blackCnt = 0;\n        let firstBlack = [];\n        let lastBlack = [];\n        let tmpBlackArr = [];\n        for (let x = 0; x < 7; x++) { // 위에서부터 차례로\n            if (j + 3 - x >= 0 && j + 3 - x <= 14) { // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n\n                if (arr[i][j + 3 - x] === 1) {\n                    blackCnt++\n                }\n                if (blackCnt === 1 && arr[i][j + 3 - x] === 1) {\n                    firstBlack = [i, j + 3 - x]\n                }\n                if (blackCnt === 3 && arr[i][j + 3 - x] === 1) {\n                    lastBlack = [i, j + 3 - x]\n                }\n            }\n        }\n        console.log(firstBlack, lastBlack)\n        for (let x = 0; x < (firstBlack[1] - lastBlack[1]) + 1; x++) {\n            tmpBlackArr[x] = arr[firstBlack[0]][firstBlack[1] - x]\n        }\n        console.log(tmpBlackArr);\n        if (tmpBlackArr.length <= 4) { // 4칸 이\n            if (tmpBlackArr.filter(i => i === -1).length === 1) {\n                return \"none3By3\"\n            } else {\n                if (firstBlack[1] + 1 > 14 || lastBlack[1] - 1 < 0) { // 3개 놓은 돌 중에 위아래가 벽인 경우\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0]][firstBlack[1]+1] === -1 || arr[lastBlack[0]][lastBlack[1]-1] === -1) {\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0]][firstBlack[1]+1] === 0 && arr[lastBlack[0]][lastBlack[1]-1] === 0) {\n                    return \"3By3\"\n                }\n            }\n        } else {\n            return \"none3By3\"\n        }\n    } else if (line === 3) {\n        let blackCnt = 0;\n        let firstBlack = [];\n        let lastBlack = [];\n        let tmpBlackArr = [];\n        for (let x = 0; x < 7; x++) { // 위에서부터 차례로\n            if (i + 3 - x >= 0 && i + 3 - x <= 14 && j + 3 - x >= 0 && j + 3 - x <= 14) { // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n\n                if (arr[i + 3 - x][j + 3 - x] === 1) {\n                    blackCnt++\n                }\n                if (blackCnt === 1 && arr[i + 3 - x][j + 3 - x]) {\n                    firstBlack = [i + 3 - x, j + 3 - x]\n                }\n                if (blackCnt === 3 && arr[i + 3 - x][j + 3 - x]) {\n                    lastBlack = [i + 3 - x, j + 3 - x]\n                }\n            }\n        }\n        for (let y = 0; y < (lastBlack[0] - firstBlack[0]) + 1; y++) {\n            tmpBlackArr[y] = arr[firstBlack[0] - y][firstBlack[1] - y]\n        }\n        if (tmpBlackArr.length <= 4) { // 4칸 이\n            if (tmpBlackArr.filter(i => i === -1).length === 1) {\n                return \"none3By3\"\n            } else {\n                if ((firstBlack[0] + 1 > 14 && firstBlack[1] + 1 > 14) || (lastBlack[0] - 1 < 0 && lastBlack[0] - 1 < 0)) { // 3개 놓은 돌 중에 위아래가 벽인 경우\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] + 1][firstBlack[1] + 1] === -1 || arr[lastBlack[0] - 1][lastBlack[1] - 1] === -1) {\n                    return \"none3By3\"\n                } else if (arr[firstBlack[0] + 1][firstBlack[1] + 1] === 0 && arr[lastBlack[0] - 1][lastBlack[1] - 1] === 0) {\n                    return \"3By3\"\n                }\n            }\n        } else {\n            return \"none3By3\"\n        }\n    }\n}\n\nfunction fourBlackCnt(arr, line, i, j) { // 착수지점 기준으로 4방향의 배열에서 흑돌이 갯수 측정\n    if (line === 0) {\n        let firstBlack = [];\n        let lastBlack = [];\n        let blackCnt = 0;\n        for (let k = -4; k <= 4; k++) {\n            if( i + k >= 0 && i + k <= 14 ){    // UP to DOWN : i 의 범위는 0~14까지만 가능\n                if(arr[i + k][j]===1){\n                    blackCnt++;\n                }\n                if(blackCnt === 1 && arr[i + k][j]){\n                    firstBlack = [i + k, j]\n                }\n                if(blackCnt === 4 && arr[i + k][j]){\n                    lastBlack = [i + k][j]\n                }\n            }\n        }\n        return blackCnt;\n    } else if (line === 1) {\n        let firstBlack = [];\n        let lastBlack = [];\n        let blackCnt = 0;\n        for (let k = -4; k <= 4; k++) {\n            if( i + k >= 0 && i + k <= 14 && j - k >= 0 && j - k <= 14  ){    // RIGHT_UP to LEFT_DOWN : i 의 범위는 0~14까지만 가능\n                if(arr[i + k][j - k]===1){\n                    blackCnt++;\n                }\n            }\n        }\n        return blackCnt;\n    } else if (line === 2) {\n        let firstBlack = [];\n        let lastBlack = [];\n        let blackCnt = 0;\n        for (let k = -4; k <= 4; k++) {\n            if( j + k >= 0 && j + k <= 14 ){    // DOWN TO UP : i 의 범위는 0~14까지만 가능\n                if(arr[i][j - k]===1){\n                    blackCnt++;\n                }\n            }\n        }\n        return blackCnt;\n    } else if (line === 3) {\n        let firstBlack = [];\n        let lastBlack = [];\n        let blackCnt = 0;\n        for (let k = -4; k <= 4; k++) {\n            if( i - k >= 0 && i - k <= 14 && j - k >= 0 && j - k <= 14 ){    // RIGHT_DOWN to LEFT_UP : i 의 범위는 0~14까지만 가능\n                if(arr[i][j + k]===1){\n                    blackCnt++;\n                }\n            }\n        }\n        return blackCnt;\n    }\n}"]},"metadata":{},"sourceType":"module"}