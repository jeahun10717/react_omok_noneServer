{"ast":null,"code":"exports.winRule = (turn, stoneArr, max) => {\n  //i,j 는 2차원 배열의 index, turn은 흑인지 백인지, \n  //sonteArr 는 판의 상태(2차원 배열), max 는 판의 최대 크기 \n  const winCheckArr = stoneArr; // console.log(winCheckArr);\n\n  if (turn === 0) {\n    //흑돌 차례일 때 승리조건 판단\n    for (let i = 0; i < max; i++) {\n      for (let j = 0; j < max; j++) {\n        if (winCheckArr[i][j] === 0) {\n          continue;\n        }\n\n        if ( // RIGHT\n        winCheckArr[i][j] === -1 && winCheckArr[i][j + 1] === 1 && winCheckArr[i][j + 2] === 1 && winCheckArr[i][j + 3] === 1 && winCheckArr[i][j + 4] === 1) {\n          console.log(winCheckArr);\n\n          if (winCheckArr[i][j + 5] === 1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === 1 && winCheckArr[i][j + 6] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === 1 && winCheckArr[i][j + 6] === 1 && winCheckArr[i][j + 7] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === 1 && winCheckArr[i][j + 6] === 1 && winCheckArr[i][j + 7] === 1 && winCheckArr[i][j + 8]) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // RIGHT DOWN\n        winCheckArr[i][j] === 1 && winCheckArr[i + 1][j + 1] === 1 && winCheckArr[i + 2][j + 2] === 1 && winCheckArr[i + 3][j + 3] === 1 && winCheckArr[i + 4][j + 4] === 1) {\n          if (winCheckArr[i + 5][j + 5] === 1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === 1 && winCheckArr[i + 6][j + 6] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === 1 && winCheckArr[i + 6][j + 6] === 1 && winCheckArr[i + 7][j + 7] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === 1 && winCheckArr[i + 6][j + 6] === 1 && winCheckArr[i + 7][j + 7] === 1 && winCheckArr[i + 8][j + 8] === 1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // DOWN\n        winCheckArr[i][j] === 1 && winCheckArr[i + 1][j] === 1 && winCheckArr[i + 2][j] === 1 && winCheckArr[i + 3][j] === 1 && winCheckArr[i + 4][j] === 1) {\n          if (winCheckArr[i + 5][j] === 1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === 1 && winCheckArr[i + 6][j] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === 1 && winCheckArr[i + 6][j] === 1 && winCheckArr[i + 7][j] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === 1 && winCheckArr[i + 6][j] === 1 && winCheckArr[i + 7][j] === 1 && winCheckArr[i + 8][j] === 1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // LEFT DOWN\n        winCheckArr[i][j] === 1 && winCheckArr[i + 1][j - 1] === 1 && winCheckArr[i + 2][j - 2] === 1 && winCheckArr[i + 3][j - 3] === 1 && winCheckArr[i + 4][j - 4] === 1) {\n          if (winCheckArr[i + 5][j - 5] === 1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === 1 && winCheckArr[i + 6][j - 6] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === 1 && winCheckArr[i + 6][j - 6] === 1 && winCheckArr[i + 7][j - 7] === 1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === 1 && winCheckArr[i + 6][j - 6] === 1 && winCheckArr[i + 7][j - 7] === 1 && winCheckArr[i + 8][j - 8] === 1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else {\n          // winrule 에 걸리지 않을 경우\n          return \"continue\";\n        }\n      }\n    }\n  } else if (turn === 1) {\n    //백돌 차례일 때 승리조건 판단\n    for (let i = 0; i < max; i++) {\n      for (let j = 0; j < max; j++) {\n        if (winCheckArr[i][j] === 0) {\n          continue;\n        }\n\n        if ( // RIGHT\n        winCheckArr[i][j] === -1 && winCheckArr[i][j + 1] === -1 && winCheckArr[i][j + 2] === -1 && winCheckArr[i][j + 3] === -1 && winCheckArr[i][j + 4] === -1) {\n          console.log(winCheckArr);\n\n          if (winCheckArr[i][j + 5] === -1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === -1 && winCheckArr[i][j + 6] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === -1 && winCheckArr[i][j + 6] === -1 && winCheckArr[i][j + 7] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i][j + 5] === -1 && winCheckArr[i][j + 6] === -1 && winCheckArr[i][j + 7] === -1 && winCheckArr[i][j + 8] === -1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // RIGHT DOWN\n        winCheckArr[i][j] === -1 && winCheckArr[i + 1][j + 1] === -1 && winCheckArr[i + 2][j + 2] === -1 && winCheckArr[i + 3][j + 3] === -1 && winCheckArr[i + 4][j + 4] === -1) {\n          if (winCheckArr[i + 5][j + 5] === -1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === -1 && winCheckArr[i + 6][j + 6] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === -1 && winCheckArr[i + 6][j + 6] === -1 && winCheckArr[i + 7][j + 7] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j + 5] === -1 && winCheckArr[i + 6][j + 6] === -1 && winCheckArr[i + 7][j + 7] === -1 && winCheckArr[i + 8][j + 8] === -1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // DOWN\n        winCheckArr[i][j] === -1 && winCheckArr[i + 1][j] === -1 && winCheckArr[i + 2][j] === -1 && winCheckArr[i + 3][j] === -1 && winCheckArr[i + 4][j] === -1) {\n          if (winCheckArr[i + 5][j] === -1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === -1 && winCheckArr[i + 6][j] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === -1 && winCheckArr[i + 6][j] === -1 && winCheckArr[i + 7][j] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j] === -1 && winCheckArr[i + 6][j] === -1 && winCheckArr[i + 7][j] === -1 && winCheckArr[i + 8][j] === -1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else if ( // LEFT DOWN\n        winCheckArr[i][j] === -1 && winCheckArr[i + 1][j - 1] === -1 && winCheckArr[i + 2][j - 2] === -1 && winCheckArr[i + 3][j - 3] === -1 && winCheckArr[i + 4][j - 4] === -1) {\n          if (winCheckArr[i + 5][j - 5] === -1) {\n            // 6목 판단\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === -1 && winCheckArr[i + 6][j - 6] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === -1 && winCheckArr[i + 6][j - 6] === -1 && winCheckArr[i + 7][j - 7] === -1) {\n            return \"prohibitRule\";\n          }\n\n          if (winCheckArr[i + 5][j - 5] === -1 && winCheckArr[i + 6][j - 6] === -1 && winCheckArr[i + 7][j - 7] === -1 && winCheckArr[i + 8][j - 8] === -1) {\n            return \"prohibitRule\";\n          }\n\n          alert(\"흑 승리!\");\n          return \"blackWin\";\n        } else {\n          // winrule 에 걸리지 않을 경우\n          return \"continue\";\n        }\n      }\n    }\n  }\n};\n\nfunction checkAround(i, j, turn, checkArr) {// 돌을 놓는 곳을 기준으로 8방향에서 돌이 존재하는 확인하는 부분\n  // turn 은 흑,백돌을 판단하는 부분, checkArr 는 확인할 배열\n  // checkArr[i-1][j-1]===turn \n  // checkArr[i][j-1]===turn \n  // checkArr[i+1][j-1]===turn \n  // checkArr[i-1][j]===turn \n  // checkArr[i+1][j]===turn \n  // checkArr[i-1][j+1]===turn \n  // checkArr[i][j+1]===turn \n  // checkArr[i+1][j+1]===turn \n}\n\nexports.test = () => {\n  console.log(\"test\");\n};","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/winRule.js"],"names":["exports","winRule","turn","stoneArr","max","winCheckArr","i","j","console","log","alert","checkAround","checkArr","test"],"mappings":"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","sourcesContent":["exports.winRule = (turn, stoneArr, max) => { \n    //i,j 는 2차원 배열의 index, turn은 흑인지 백인지, \n    //sonteArr 는 판의 상태(2차원 배열), max 는 판의 최대 크기 \n    const winCheckArr = stoneArr;\n    // console.log(winCheckArr);\n    if(turn === 0){//흑돌 차례일 때 승리조건 판단\n        for (let i = 0; i < max; i++) {\n            for (let j = 0; j < max; j++) {\n                if(winCheckArr[i][j] === 0) {\n                    continue;\n                }\n                if(// RIGHT\n                    winCheckArr[i][j]===-1 && \n                    winCheckArr[i][j+1]===1 && \n                    winCheckArr[i][j+2]===1 && \n                    winCheckArr[i][j+3]===1 && \n                    winCheckArr[i][j+4]===1){\n                        console.log(winCheckArr);\n                        if(winCheckArr[i][j+5]===1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===1 && winCheckArr[i][j+6]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===1 && winCheckArr[i][j+6]===1 && winCheckArr[i][j+7]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===1 && winCheckArr[i][j+6]===1 && winCheckArr[i][j+7]===1 && winCheckArr[i][j+8]){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else if( // RIGHT DOWN\n                    winCheckArr[i][j]===1 && \n                    winCheckArr[i+1][j+1]===1 && \n                    winCheckArr[i+2][j+2]===1 && \n                    winCheckArr[i+3][j+3]===1 && \n                    winCheckArr[i+4][j+4]===1){\n                        if(winCheckArr[i+5][j+5]===1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===1 && winCheckArr[i+6][j+6]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===1 && winCheckArr[i+6][j+6]===1 && winCheckArr[i+7][j+7]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===1 && winCheckArr[i+6][j+6]===1 && winCheckArr[i+7][j+7]===1 && winCheckArr[i+8][j+8]===1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")            \n                        return \"blackWin\"\n                }else if( // DOWN\n                    winCheckArr[i][j]===1 && \n                    winCheckArr[i+1][j]===1 && \n                    winCheckArr[i+2][j]===1 && \n                    winCheckArr[i+3][j]===1 && \n                    winCheckArr[i+4][j]===1){\n                        if(winCheckArr[i+5][j]===1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===1 && winCheckArr[i+6][j]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===1 && winCheckArr[i+6][j]===1 && winCheckArr[i+7][j]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===1 && winCheckArr[i+6][j]===1 && winCheckArr[i+7][j]===1 && winCheckArr[i+8][j]===1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else if( // LEFT DOWN\n                    winCheckArr[i][j]===1 && \n                    winCheckArr[i+1][j-1]===1 && \n                    winCheckArr[i+2][j-2]===1 && \n                    winCheckArr[i+3][j-3]===1 && \n                    winCheckArr[i+4][j-4]===1){\n                        if(winCheckArr[i+5][j-5]===1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===1 && winCheckArr[i+6][j-6]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===1 && winCheckArr[i+6][j-6]===1 && winCheckArr[i+7][j-7]===1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===1 && winCheckArr[i+6][j-6]===1 && winCheckArr[i+7][j-7]===1 && winCheckArr[i+8][j-8]===1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else{ // winrule 에 걸리지 않을 경우\n                    return \"continue\"\n                }          \n            }\n        }\n    }else if(turn === 1){//백돌 차례일 때 승리조건 판단\n        for (let i = 0; i < max; i++) {\n            for (let j = 0; j < max; j++) {\n                if(winCheckArr[i][j] === 0) {\n                    continue;\n                }\n                if(// RIGHT\n                    winCheckArr[i][j]===-1 && \n                    winCheckArr[i][j+1]===-1 && \n                    winCheckArr[i][j+2]===-1 && \n                    winCheckArr[i][j+3]===-1 && \n                    winCheckArr[i][j+4]===-1){\n                        console.log(winCheckArr);\n                        if(winCheckArr[i][j+5]===-1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===-1 && winCheckArr[i][j+6]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===-1 && winCheckArr[i][j+6]===-1 && winCheckArr[i][j+7]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i][j+5]===-1 && winCheckArr[i][j+6]===-1 && winCheckArr[i][j+7]===-1 && winCheckArr[i][j+8]===-1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else if( // RIGHT DOWN\n                    winCheckArr[i][j]===-1 && \n                    winCheckArr[i+1][j+1]===-1 && \n                    winCheckArr[i+2][j+2]===-1 && \n                    winCheckArr[i+3][j+3]===-1 && \n                    winCheckArr[i+4][j+4]===-1){\n                        if(winCheckArr[i+5][j+5]===-1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===-1 && winCheckArr[i+6][j+6]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===-1 && winCheckArr[i+6][j+6]===-1 && winCheckArr[i+7][j+7]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j+5]===-1 && winCheckArr[i+6][j+6]===-1 && winCheckArr[i+7][j+7]===-1 && winCheckArr[i+8][j+8]===-1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")            \n                        return \"blackWin\"\n                }else if( // DOWN\n                    winCheckArr[i][j]===-1 && \n                    winCheckArr[i+1][j]===-1 && \n                    winCheckArr[i+2][j]===-1 && \n                    winCheckArr[i+3][j]===-1 && \n                    winCheckArr[i+4][j]===-1){\n                        if(winCheckArr[i+5][j]===-1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===-1 && winCheckArr[i+6][j]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===-1 && winCheckArr[i+6][j]===-1 && winCheckArr[i+7][j]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j]===-1 && winCheckArr[i+6][j]===-1 && winCheckArr[i+7][j]===-1 && winCheckArr[i+8][j]===-1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else if( // LEFT DOWN\n                    winCheckArr[i][j]===-1 && \n                    winCheckArr[i+1][j-1]===-1 && \n                    winCheckArr[i+2][j-2]===-1 && \n                    winCheckArr[i+3][j-3]===-1 && \n                    winCheckArr[i+4][j-4]===-1){\n                        if(winCheckArr[i+5][j-5]===-1){ // 6목 판단\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===-1 && winCheckArr[i+6][j-6]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===-1 && winCheckArr[i+6][j-6]===-1 && winCheckArr[i+7][j-7]===-1){\n                            return \"prohibitRule\"\n                        }\n                        if(winCheckArr[i+5][j-5]===-1 && winCheckArr[i+6][j-6]===-1 && winCheckArr[i+7][j-7]===-1 && winCheckArr[i+8][j-8]===-1){\n                            return \"prohibitRule\"\n                        }\n                        alert(\"흑 승리!\")\n                        return \"blackWin\"\n                }else{ // winrule 에 걸리지 않을 경우\n                    return \"continue\"\n                }          \n            }\n        }\n    }\n}\n\nfunction checkAround(i, j, turn, checkArr){ // 돌을 놓는 곳을 기준으로 8방향에서 돌이 존재하는 확인하는 부분\n    // turn 은 흑,백돌을 판단하는 부분, checkArr 는 확인할 배열\n    // checkArr[i-1][j-1]===turn \n    // checkArr[i][j-1]===turn \n    // checkArr[i+1][j-1]===turn \n    // checkArr[i-1][j]===turn \n    // checkArr[i+1][j]===turn \n    // checkArr[i-1][j+1]===turn \n    // checkArr[i][j+1]===turn \n    // checkArr[i+1][j+1]===turn \n}\n\nexports.test = ()=>{\n    console.log(\"test\");\n}"]},"metadata":{},"sourceType":"module"}