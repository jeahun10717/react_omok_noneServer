{"ast":null,"code":"const copyArr = require('../rules/arrayCopy');\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n  let tmpArr;\n  tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n\n  for (let i = 0; i < lineNum; i++) {\n    for (let j = 0; j < lineNum; j++) {\n      if (tmpArr[i][j] === 1) {\n        // 체크 지점에 반드시 흑돌이 놓여 있어야 함\n        let check3By3Arr = [];\n\n        for (let i = 0; i < 4; i++) {\n          check3By3Arr[i] = 1;\n        }\n\n        for (let depth = 1; depth < 4; depth++) {\n          if (tmpArr[i - depth][j] !== undefined) {\n            if (tmpArr[i - depth][j] === 1) {\n              check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j]; // Up\n            }\n          }\n\n          if (tmpArr[i + depth][j] !== undefined) {\n            if (tmpArr[i + depth][j] === 1) {\n              check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j]; // Down\n            }\n          }\n\n          if (tmpArr[i - depth][j + depth] !== undefined) {\n            if (tmpArr[i - depth][j + depth] === 1) {\n              check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth]; // Right Up\n            }\n          }\n\n          if (tmpArr[i + depth][j - depth] !== undefined) {\n            if (tmpArr[i + depth][j - depth] === 1) {\n              check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth]; // Left Down\n            }\n          }\n\n          if (tmpArr[i][j + depth] !== undefined) {\n            if (tmpArr[i][j + depth] === 1) {\n              check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth]; // Right\n            }\n          }\n\n          if (tmpArr[i][j - depth] !== undefined) {\n            if (tmpArr[i][j - depth] === 1) {\n              check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth]; // Left\n            }\n          }\n\n          if (tmpArr[i + depth][j + depth] !== undefined) {\n            if (tmpArr[i + depth][j + depth] === 1) {\n              check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth]; // Right Down           \n            }\n          }\n\n          if (tmpArr[i - depth][j - depth] !== undefined) {\n            if (tmpArr[i - depth][j - depth] === 1) {\n              check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth]; // Left Up\n            }\n          } // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n          // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n\n        }\n\n        console.log(check3By3Arr);\n        let threeCnt = check3By3Arr.filter(elemnet => 3 === elemnet).length;\n        console.log(threeCnt); // let threeCntIdx = check3By3Arr.findIndex()\n        // for (let checkIdx = 0; checkIdx < check3By3Arr.length; checkIdx++) {\n        //     if(check3By3Arr[checkIdx]===3){\n        //     }\n        // }\n        // if(threeCnt>1){\n        // }\n        // for (let idx = 0; idx < array.length; idx++) {\n        // }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js"],"names":["copyArr","require","exports","prohibit3by3","plateArr","lineNum","tmpArr","arrayCopy","i","j","check3By3Arr","depth","undefined","console","log","threeCnt","filter","elemnet","length"],"mappings":"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","sourcesContent":["const copyArr = require('../rules/arrayCopy')\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n    let tmpArr;\n    tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n    for (let i = 0; i < lineNum; i++) {\n        for (let j = 0; j < lineNum; j++) {\n            if(tmpArr[i][j]===1){   // 체크 지점에 반드시 흑돌이 놓여 있어야 함\n                let check3By3Arr = [];\n                for (let i = 0; i < 4; i++) {\n                    check3By3Arr[i]=1;\n                }\n                for (let depth = 1; depth<4 ; depth++) {\n                    if(tmpArr[i- depth ][j]!==undefined){\n                        if(tmpArr[i- depth ][j]===1){\n                            check3By3Arr[0]=check3By3Arr[0]+tmpArr[i- depth ][j] // Up\n                        }\n                        \n                    } \n                    if(tmpArr[i+ depth ][j]!==undefined){\n                        if(tmpArr[i+ depth ][j]===1){\n                            check3By3Arr[0]=check3By3Arr[0]+tmpArr[i+ depth ][j] // Down\n                        }\n                        \n                    } \n                    if(tmpArr[i- depth ][j+ depth ]!==undefined){\n                        if(tmpArr[i- depth ][j+ depth ]===1){\n                            check3By3Arr[1]=check3By3Arr[1]+tmpArr[i- depth ][j+ depth ] // Right Up\n                        }\n                        \n                    } \n                    if(tmpArr[i+ depth ][j- depth ]!==undefined){\n                        if(tmpArr[i+ depth ][j- depth ]===1){\n                            check3By3Arr[1]=check3By3Arr[1]+tmpArr[i+ depth ][j- depth ] // Left Down\n                        }\n                        \n                    } \n                    if(tmpArr[i][j+ depth ]!==undefined){\n                        if(tmpArr[i][j+ depth ]===1){\n                            check3By3Arr[2]=check3By3Arr[2]+tmpArr[i][j+ depth ] // Right\n                        }\n                        \n                    } \n                    if(tmpArr[i][j- depth ]!==undefined){\n                        if(tmpArr[i][j- depth ]===1){\n                            check3By3Arr[2]=check3By3Arr[2]+tmpArr[i][j- depth ] // Left\n                        }\n                        \n                    } \n                    if(tmpArr[i+ depth ][j+ depth ]!==undefined){\n                        if(tmpArr[i+ depth ][j+ depth ]===1){\n                            check3By3Arr[3]=check3By3Arr[3]+tmpArr[i+ depth ][j+ depth ] // Right Down           \n                        }\n                        \n                    } \n                    if(tmpArr[i- depth ][j- depth ]!==undefined){\n                        if(tmpArr[i- depth ][j- depth ]===1){\n                            check3By3Arr[3]=check3By3Arr[3]+tmpArr[i- depth ][j- depth ] // Left Up\n                        }\n                        \n                    } \n                    // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n                    // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n                }\n                console.log(check3By3Arr);\n                let threeCnt = check3By3Arr.filter(elemnet => 3 === elemnet).length;\n                console.log(threeCnt);\n                // let threeCntIdx = check3By3Arr.findIndex()\n                // for (let checkIdx = 0; checkIdx < check3By3Arr.length; checkIdx++) {\n                //     if(check3By3Arr[checkIdx]===3){\n\n                //     }\n                // }\n                // if(threeCnt>1){\n\n                // }\n                // for (let idx = 0; idx < array.length; idx++) {\n\n                // }\n            }\n            \n        }        \n    }\n    \n    \n    \n    \n}"]},"metadata":{},"sourceType":"module"}