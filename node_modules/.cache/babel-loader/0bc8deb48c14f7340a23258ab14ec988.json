{"ast":null,"code":"const copyArr = require('../rules/arrayCopy');\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n  let tmpArr;\n  tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n  let check3By3Arr = [];\n\n  for (let i = 0; i < 4; i++) {\n    check3By3Arr[i] = 1;\n  }\n\n  for (let depth = 1; depth < 4; depth++) {\n    if (i - depth >= 0) {\n      if (tmpArr[i - depth][j] === 1) {\n        check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j]; // Up\n      }\n    }\n\n    if (i + depth <= 14) {\n      if (tmpArr[i + depth][j] === 1) {\n        check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j]; // Down\n      }\n    }\n\n    if (i - depth >= 0 && j + depth <= 14) {\n      if (tmpArr[i - depth][j + depth] === 1) {\n        check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth]; // Right Up\n      }\n    }\n\n    if (i + depth <= 14 && j - depth >= 0) {\n      if (tmpArr[i + depth][j - depth] === 1) {\n        check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth]; // Left Down\n      }\n    }\n\n    if (j + depth <= 14) {\n      if (tmpArr[i][j + depth] === 1) {\n        check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth]; // Right\n      }\n    }\n\n    if (j - depth >= 0) {\n      if (tmpArr[i][j - depth] === 1) {\n        check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth]; // Left\n      }\n    }\n\n    if (i + depth <= 14 && j + depth <= 14) {\n      if (tmpArr[i + depth][j + depth] === 1) {\n        check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth]; // Right Down           \n      }\n    }\n\n    if (i - depth >= 0 && j - depth >= 0) {\n      if (tmpArr[i - depth][j - depth] === 1) {\n        check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth]; // Left Up\n      }\n    } // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n    // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n\n  }\n\n  let threeCnt = check3By3Arr.filter(element => element >= 3).length;\n  console.log(threeCnt, \"123123123123123\");\n\n  if (threeCnt > 1) {// 3 라인일 때\n    // 4 라인일 떄 \n  } // if(threeCnt>1) {\n  //     \n  //     // console.log(threeState);\n  //     // console.log(threeState.find(element=>element===0));\n  //     if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }else if(threeState.find(element=>element===0)){\n  //     }\n  // }\n\n};\n\nfunction threeLineChk(arr, line, i, j) {\n  if (line === 0) {\n    let blackCnt = 0;\n    let firstBlack = [];\n    let lastBlack = [];\n    let tmpBlackArr = [];\n\n    for (let x = 0; x < 7; x++) {\n      // 위에서부터 차례로\n      if (i - 3 + x >= 0 && i - 3 + x <= 14) {\n        // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n        if (arr[i - 3 + x][j] === 1) {\n          blackCnt++;\n        }\n\n        if (blackCnt === 1) {\n          firstBlack = [i - 3 + x, j];\n        }\n\n        if (blackCnt === 3) {\n          lastBlack = [i - 3 + x, j];\n        }\n      }\n    }\n\n    for (let y = 0; y < lastBlack[1] - firstBlack[1] + 1; y++) {\n      tmpBlackArr[y] = arr[firstBlack[1] + y][firstBlack[2]];\n    }\n\n    if (tmpBlackArr.length <= 4) {\n      // 4칸 이\n      if (tmpBlackArr.filter(i => i === -1).length === 1) {\n        return \"none3By3\";\n      } else {\n        if (firstBlack[1] - 1) return \"3By3\";\n      }\n    } else {\n      return \"none3By3\";\n    }\n  } else if (line === 1) {} else if (line === 2) {} else if (line === 3) {}\n}","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js"],"names":["copyArr","require","exports","prohibit3by3","plateArr","lineNum","tmpArr","arrayCopy","check3By3Arr","i","depth","j","threeCnt","filter","element","length","console","log","threeLineChk","arr","line","blackCnt","firstBlack","lastBlack","tmpBlackArr","x","y"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AAEAC,OAAO,CAACC,YAAR,GAAuB,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC1C,MAAIC,MAAJ;AACAA,EAAAA,MAAM,GAAGN,OAAO,CAACO,SAAR,CAAkBH,QAAlB,EAA4BE,MAA5B,EAAoCD,OAApC,CAAT;AACA,MAAIG,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,IAAAA,YAAY,CAACC,CAAD,CAAZ,GAAkB,CAAlB;AACH;;AACD,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EAAwC;AACpC,QAAID,CAAC,GAAGC,KAAJ,IAAa,CAAjB,EAAoB;AAChB,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAlB,MAAyB,CAA7B,EAAgC;AAC5BH,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAlB,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAIF,CAAC,GAAGC,KAAJ,IAAa,EAAjB,EAAqB;AACjB,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAlB,MAAyB,CAA7B,EAAgC;AAC5BH,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAlB,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAIF,CAAC,GAAGC,KAAJ,IAAa,CAAb,IAAkBC,CAAC,GAAGD,KAAJ,IAAa,EAAnC,EAAuC;AACnC,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,MAAiC,CAArC,EAAwC;AACpCF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAID,CAAC,GAAGC,KAAJ,IAAa,EAAb,IAAmBC,CAAC,GAAGD,KAAJ,IAAa,CAApC,EAAuC;AACnC,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,MAAiC,CAArC,EAAwC;AACpCF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAIC,CAAC,GAAGD,KAAJ,IAAa,EAAjB,EAAqB;AACjB,UAAIJ,MAAM,CAACG,CAAD,CAAN,CAAUE,CAAC,GAAGD,KAAd,MAAyB,CAA7B,EAAgC;AAC5BF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAD,CAAN,CAAUE,CAAC,GAAGD,KAAd,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAIC,CAAC,GAAGD,KAAJ,IAAa,CAAjB,EAAoB;AAChB,UAAIJ,MAAM,CAACG,CAAD,CAAN,CAAUE,CAAC,GAAGD,KAAd,MAAyB,CAA7B,EAAgC;AAC5BF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAD,CAAN,CAAUE,CAAC,GAAGD,KAAd,CAApC,CAD4B,CAC6B;AAC5D;AAEJ;;AACD,QAAID,CAAC,GAAGC,KAAJ,IAAa,EAAb,IAAmBC,CAAC,GAAGD,KAAJ,IAAa,EAApC,EAAwC;AACpC,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,MAAiC,CAArC,EAAwC;AACpCF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ;;AACD,QAAID,CAAC,GAAGC,KAAJ,IAAa,CAAb,IAAkBC,CAAC,GAAGD,KAAJ,IAAa,CAAnC,EAAsC;AAClC,UAAIJ,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,MAAiC,CAArC,EAAwC;AACpCF,QAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,GAAkBF,MAAM,CAACG,CAAC,GAAGC,KAAL,CAAN,CAAkBC,CAAC,GAAGD,KAAtB,CAApC,CADoC,CAC6B;AACpE;AAEJ,KAhDmC,CAiDpC;AACA;;AACH;;AACD,MAAIE,QAAQ,GAAGJ,YAAY,CAACK,MAAb,CAAoBC,OAAO,IAAIA,OAAO,IAAI,CAA1C,EAA6CC,MAA5D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,iBAAtB;;AAEA,MAAIA,QAAQ,GAAG,CAAf,EAAkB,CACd;AAEA;AACH,GAlEyC,CAmE1C;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;;AACH,CAjFD;;AAmFA,SAASM,YAAT,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCX,CAAjC,EAAoCE,CAApC,EAAuC;AACnC,MAAIS,IAAI,KAAK,CAAb,EAAgB;AACZ,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,UAAIhB,CAAC,GAAG,CAAJ,GAAQgB,CAAR,IAAa,CAAb,IAAkBhB,CAAC,GAAG,CAAJ,GAAQgB,CAAR,IAAa,EAAnC,EAAuC;AAAE;AAErC,YAAIN,GAAG,CAACV,CAAC,GAAG,CAAJ,GAAQgB,CAAT,CAAH,CAAed,CAAf,MAAsB,CAA1B,EAA6B;AACzBU,UAAAA,QAAQ;AACX;;AACD,YAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAChBC,UAAAA,UAAU,GAAG,CAACb,CAAC,GAAG,CAAJ,GAAQgB,CAAT,EAAYd,CAAZ,CAAb;AACH;;AACD,YAAIU,QAAQ,KAAK,CAAjB,EAAoB;AAChBE,UAAAA,SAAS,GAAG,CAACd,CAAC,GAAG,CAAJ,GAAQgB,CAAT,EAAYd,CAAZ,CAAZ;AACH;AACJ;AACJ;;AACD,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIH,SAAS,CAAC,CAAD,CAAT,GAAeD,UAAU,CAAC,CAAD,CAA1B,GAAiC,CAArD,EAAwDI,CAAC,EAAzD,EAA6D;AACzDF,MAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBP,GAAG,CAACG,UAAU,CAAC,CAAD,CAAV,GAAgBI,CAAjB,CAAH,CAAuBJ,UAAU,CAAC,CAAD,CAAjC,CAAjB;AACH;;AACD,QAAIE,WAAW,CAACT,MAAZ,IAAsB,CAA1B,EAA6B;AAAE;AAC3B,UAAIS,WAAW,CAACX,MAAZ,CAAmBJ,CAAC,IAAIA,CAAC,KAAK,CAAC,CAA/B,EAAkCM,MAAlC,KAA6C,CAAjD,EAAoD;AAChD,eAAO,UAAP;AACH,OAFD,MAEO;AACH,YAAIO,UAAU,CAAC,CAAD,CAAV,GAAgB,CAApB,EACI,OAAO,MAAP;AACP;AACJ,KAPD,MAOO;AACH,aAAO,UAAP;AACH;AACJ,GAhCD,MAgCO,IAAIF,IAAI,KAAK,CAAb,EAAgB,CAEtB,CAFM,MAEA,IAAIA,IAAI,KAAK,CAAb,EAAgB,CAEtB,CAFM,MAEA,IAAIA,IAAI,KAAK,CAAb,EAAgB,CAEtB;AACJ","sourcesContent":["const copyArr = require('../rules/arrayCopy')\n\nexports.prohibit3by3 = (plateArr, lineNum) => {\n    let tmpArr;\n    tmpArr = copyArr.arrayCopy(plateArr, tmpArr, lineNum);\n    let check3By3Arr = [];\n    for (let i = 0; i < 4; i++) {\n        check3By3Arr[i] = 1;\n    }\n    for (let depth = 1; depth < 4; depth++) {\n        if (i - depth >= 0) {\n            if (tmpArr[i - depth][j] === 1) {\n                check3By3Arr[0] = check3By3Arr[0] + tmpArr[i - depth][j] // Up\n            }\n\n        }\n        if (i + depth <= 14) {\n            if (tmpArr[i + depth][j] === 1) {\n                check3By3Arr[0] = check3By3Arr[0] + tmpArr[i + depth][j] // Down\n            }\n\n        }\n        if (i - depth >= 0 && j + depth <= 14) {\n            if (tmpArr[i - depth][j + depth] === 1) {\n                check3By3Arr[1] = check3By3Arr[1] + tmpArr[i - depth][j + depth] // Right Up\n            }\n\n        }\n        if (i + depth <= 14 && j - depth >= 0) {\n            if (tmpArr[i + depth][j - depth] === 1) {\n                check3By3Arr[1] = check3By3Arr[1] + tmpArr[i + depth][j - depth] // Left Down\n            }\n\n        }\n        if (j + depth <= 14) {\n            if (tmpArr[i][j + depth] === 1) {\n                check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j + depth] // Right\n            }\n\n        }\n        if (j - depth >= 0) {\n            if (tmpArr[i][j - depth] === 1) {\n                check3By3Arr[2] = check3By3Arr[2] + tmpArr[i][j - depth] // Left\n            }\n\n        }\n        if (i + depth <= 14 && j + depth <= 14) {\n            if (tmpArr[i + depth][j + depth] === 1) {\n                check3By3Arr[3] = check3By3Arr[3] + tmpArr[i + depth][j + depth] // Right Down           \n            }\n\n        }\n        if (i - depth >= 0 && j - depth >= 0) {\n            if (tmpArr[i - depth][j - depth] === 1) {\n                check3By3Arr[3] = check3By3Arr[3] + tmpArr[i - depth][j - depth] // Left Up\n            }\n\n        }\n        // const check3Num = check3By3Arr.filter(i=>3 === i).length;\n        // console.log(\"test!!!!!!!!!!1\", check3By3Arr);\n    }\n    let threeCnt = check3By3Arr.filter(element => element >= 3).length;\n    console.log(threeCnt, \"123123123123123\");\n\n    if (threeCnt > 1) {\n        // 3 라인일 때\n\n        // 4 라인일 떄 \n    }\n    // if(threeCnt>1) {\n    //     \n    //     // console.log(threeState);\n    //     // console.log(threeState.find(element=>element===0));\n    //     if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }else if(threeState.find(element=>element===0)){\n\n    //     }\n    // }\n}\n\nfunction threeLineChk(arr, line, i, j) {\n    if (line === 0) {\n        let blackCnt = 0;\n        let firstBlack = [];\n        let lastBlack = [];\n        let tmpBlackArr = [];\n        for (let x = 0; x < 7; x++) { // 위에서부터 차례로\n            if (i - 3 + x >= 0 && i - 3 + x <= 14) { // 7개를 차례로 보되 인덱스가 0 이하 14 이상은 배열이 없으므로 패스\n\n                if (arr[i - 3 + x][j] === 1) {\n                    blackCnt++\n                }\n                if (blackCnt === 1) {\n                    firstBlack = [i - 3 + x, j]\n                }\n                if (blackCnt === 3) {\n                    lastBlack = [i - 3 + x, j]\n                }\n            }\n        }\n        for (let y = 0; y < (lastBlack[1] - firstBlack[1]) + 1; y++) {\n            tmpBlackArr[y] = arr[firstBlack[1] + y][firstBlack[2]]\n        }\n        if (tmpBlackArr.length <= 4) { // 4칸 이\n            if (tmpBlackArr.filter(i => i === -1).length === 1) {\n                return \"none3By3\"\n            } else {\n                if (firstBlack[1] - 1)\n                    return \"3By3\"\n            }\n        } else {\n            return \"none3By3\"\n        }\n    } else if (line === 1) {\n\n    } else if (line === 2) {\n\n    } else if (line === 3) {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}