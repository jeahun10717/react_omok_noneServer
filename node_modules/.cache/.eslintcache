[{"/Users/seongjehun/Desktop/study/reactPrac/omok/src/index.js":"1","/Users/seongjehun/Desktop/study/reactPrac/omok/src/App.js":"2","/Users/seongjehun/Desktop/study/reactPrac/omok/src/components/Plate.js":"3","/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/winRule.js":"4","/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js":"5","/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/arrayCopy.js":"6"},{"size":409,"mtime":1624338017290,"results":"7","hashOfConfig":"8"},{"size":2048,"mtime":1625190281528,"results":"9","hashOfConfig":"8"},{"size":1764,"mtime":1625034606288,"results":"10","hashOfConfig":"8"},{"size":4378,"mtime":1625190149437,"results":"11","hashOfConfig":"8"},{"size":0,"mtime":1624955935087,"results":"12","hashOfConfig":"8"},{"size":360,"mtime":1625188567553,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13l1nov",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seongjehun/Desktop/study/reactPrac/omok/src/index.js",[],["29","30"],"/Users/seongjehun/Desktop/study/reactPrac/omok/src/App.js",["31","32"],"import React from \"react\"\nimport Plate from \"./components/Plate\"\nconst winRule = require('./rules/winRule')\nconst prophibitRule = require('./rules/prohibitRule')\nconst arrayCopy = require('./rules/arrayCopy')\n\nconst max = 15;\nconst plateStateArr = Array.from(Array(max), () => Array(max).fill(0))\nconst emptyPlate = Array.from(Array(max), () => Array(max).fill(0))\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      plateState: plateStateArr,// 0 은 안놓아진 상태 , 1은 흑돌 -1 은 백돌\n      turn: 0 // 0 일 때 흑돌차례, 1일 때 백돌차례\n    }\n    this.turnChange=this.turnChange.bind(this)\n  }\n\n  turnChange(i, j){// i, j 는 받아오는 좌표값\n    let tmpArr;\n\ttmpArr = arrayCopy.arrayCopy(this.state.plateState, tmpArr, max);\n    let winResult;\n    if(this.state.plateState[i][j]===0){\n      if(this.state.turn===0){\n        tmpArr[i][j]=1\n        winResult = winRule.winRule(this.state.turn, tmpArr, max)\n        console.log(winResult);\n        if(winResult===\"prohibitRule\"){ // 6목 이상일 때\n          console.log(\"6목 금지\");\n          tmpArr[i][j]=0\n          this.setState({turn:0})\n        }else if(winResult===\"blackWin\"){\n          window.location.href = \"http://localhost:3000/\"\n        }else if(winResult===\"continue\"){\n        this.setState({\n          plateState:tmpArr,\n          turn:1\n        })}\n    \n      }else{\n        tmpArr[i][j]=-1\n        winResult = winRule.winRule(this.state.turn, tmpArr, max)\n        if(winResult===\"whiteWin\"){\n          window.location.href = \"http://localhost:3000/\"\n          // this.setState({\n          //   plateState:emptyPlate.map(v=>v.slice()),\n          //   turn:1\n          // })\n        }\n        this.setState({\n          plateState:tmpArr,\n          turn:0\n        }) \n      }\n    }else{\n      return;\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <Plate change={this.turnChange} plateArr={this.state.plateState} turn={this.state.turn}/>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","/Users/seongjehun/Desktop/study/reactPrac/omok/src/components/Plate.js",[],"/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/winRule.js",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"exports.winRule = (turn, stoneArr, max) => { \n    //i,j 는 2차원 배열의 index, turn은 흑인지 백인지, \n    //sonteArr 는 판의 상태(2차원 배열), max 는 판의 최대 크기 \n    const winCheckArr = stoneArr;\n    // console.log(winCheckArr);\n    if(turn == 0){//흑돌 차례일 때 승리조건 판단\n        for (let i = 0; i < max; i++) {\n            for (let j = 0; j < max; j++) {\n                if(// RIGHT\n                    winCheckArr[i][j]==1 && \n                    winCheckArr[i][j+1]==1 && \n                    winCheckArr[i][j+2]==1 && \n                    winCheckArr[i][j+3]==1 && \n                    winCheckArr[i][j+4]==1){\n                        console.log(winCheckArr);\n                        if(winCheckArr[i][j+5]==1){ // 6목 판단\n                            console.log(\"t!!!!!!!!!\");\n                            return \"prohibitRule\"\n                        }\n                    alert(\"흑 승리!\")\n                    return \"blackWin\"\n                }else if( // RIGHT DOWN\n                    winCheckArr[i][j]==1 && \n                    winCheckArr[i+1][j+1]==1 && \n                    winCheckArr[i+2][j+2]==1 && \n                    winCheckArr[i+3][j+3]==1 && \n                    winCheckArr[i+4][j+4]==1){\n                    alert(\"흑 승리!\")            \n                    return \"blackWin\"\n                }else if( // DOWN\n                    winCheckArr[i][j]==1 && \n                    winCheckArr[i+1][j]==1 && \n                    winCheckArr[i+2][j]==1 && \n                    winCheckArr[i+3][j]==1 && \n                    winCheckArr[i+4][j]==1){\n                    alert(\"흑 승리!\")\n                    return \"blackWin\"\n                }else if( // LEFT DOWN\n                    winCheckArr[i][j]==1 && \n                    winCheckArr[i+1][j-1]==1 && \n                    winCheckArr[i+2][j-2]==1 && \n                    winCheckArr[i+3][j-3]==1 && \n                    winCheckArr[i+4][j-4]==1){\n                    alert(\"흑 승리!\")\n                    return \"blackWin\"\n                }else{ // winrule 에 걸리지 않을 경우\n                    return \"continue\"\n                }          \n            }\n        }\n    }else if(turn == 1){//백돌 차례일 때 승리조건 판단\n        for (let i = 0; i < max; i++) {\n            for (let j = 0; j < max; j++) {\n                if(// LEFT\n                    winCheckArr[i][j]==-1 && \n                    winCheckArr[i][j+1]==-1 && \n                    winCheckArr[i][j+2]==-1 && \n                    winCheckArr[i][j+3]==-1 && \n                    winCheckArr[i][j+4]==-1){\n                    alert(\"백 승리!\")\n                    return \"whiteWin\"\n                }else if( // LEFT DOWN\n                    winCheckArr[i][j]==-1 && \n                    winCheckArr[i+1][j+1]==-1 && \n                    winCheckArr[i+2][j+2]==-1 && \n                    winCheckArr[i+3][j+3]==-1 && \n                    winCheckArr[i+4][j+4]==-1){\n                    alert(\"백 승리!\")\n                    return \"whiteWin\"            \n                }else if( // DOWN\n                    winCheckArr[i][j]==-1 && \n                    winCheckArr[i+1][j]==-1 && \n                    winCheckArr[i+2][j]==-1 && \n                    winCheckArr[i+3][j]==-1 && \n                    winCheckArr[i+4][j]==-1){\n                    alert(\"백 승리!\")\n                    return \"whiteWin\"\n                }else if( // RIGHT DOWN\n                    winCheckArr[i][j]==-1 && \n                    winCheckArr[i+1][j-1]==-1 && \n                    winCheckArr[i+2][j-2]==-1 && \n                    winCheckArr[i+3][j-3]==-1 && \n                    winCheckArr[i+4][j-4]==-1){\n                    alert(\"백 승리!\")\n                    return \"whiteWin\"\n                }          \n            }\n        }\n    }\n}\n\nfunction checkAround(i, j, turn, checkArr){ // 돌을 놓는 곳을 기준으로 8방향에서 돌이 존재하는 확인하는 부분\n    // turn 은 흑,백돌을 판단하는 부분, checkArr 는 확인할 배열\n    // checkArr[i-1][j-1]==turn \n    // checkArr[i][j-1]==turn \n    // checkArr[i+1][j-1]==turn \n    // checkArr[i-1][j]==turn \n    // checkArr[i+1][j]==turn \n    // checkArr[i-1][j+1]==turn \n    // checkArr[i][j+1]==turn \n    // checkArr[i+1][j+1]==turn \n}\n\nexports.test = ()=>{\n    console.log(\"test\");\n}","/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/prohibitRule.js",[],"/Users/seongjehun/Desktop/study/reactPrac/omok/src/rules/arrayCopy.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":4,"column":7,"nodeType":"83","messageId":"84","endLine":4,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":9,"column":7,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":6,"column":13,"nodeType":"88","messageId":"89","endLine":6,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":10,"column":38,"nodeType":"88","messageId":"89","endLine":10,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":11,"column":40,"nodeType":"88","messageId":"89","endLine":11,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":12,"column":40,"nodeType":"88","messageId":"89","endLine":12,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":13,"column":40,"nodeType":"88","messageId":"89","endLine":13,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":14,"column":40,"nodeType":"88","messageId":"89","endLine":14,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":16,"column":47,"nodeType":"88","messageId":"89","endLine":16,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":23,"column":38,"nodeType":"88","messageId":"89","endLine":23,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":24,"column":42,"nodeType":"88","messageId":"89","endLine":24,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":25,"column":42,"nodeType":"88","messageId":"89","endLine":25,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":26,"column":42,"nodeType":"88","messageId":"89","endLine":26,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":27,"column":42,"nodeType":"88","messageId":"89","endLine":27,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":31,"column":38,"nodeType":"88","messageId":"89","endLine":31,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":32,"column":40,"nodeType":"88","messageId":"89","endLine":32,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":33,"column":40,"nodeType":"88","messageId":"89","endLine":33,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":34,"column":40,"nodeType":"88","messageId":"89","endLine":34,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":35,"column":40,"nodeType":"88","messageId":"89","endLine":35,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":39,"column":38,"nodeType":"88","messageId":"89","endLine":39,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":40,"column":42,"nodeType":"88","messageId":"89","endLine":40,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":41,"column":42,"nodeType":"88","messageId":"89","endLine":41,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":42,"column":42,"nodeType":"88","messageId":"89","endLine":42,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":43,"column":42,"nodeType":"88","messageId":"89","endLine":43,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":51,"column":19,"nodeType":"88","messageId":"89","endLine":51,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":55,"column":38,"nodeType":"88","messageId":"89","endLine":55,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":56,"column":40,"nodeType":"88","messageId":"89","endLine":56,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":57,"column":40,"nodeType":"88","messageId":"89","endLine":57,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":58,"column":40,"nodeType":"88","messageId":"89","endLine":58,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":59,"column":40,"nodeType":"88","messageId":"89","endLine":59,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":63,"column":38,"nodeType":"88","messageId":"89","endLine":63,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":64,"column":42,"nodeType":"88","messageId":"89","endLine":64,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":65,"column":42,"nodeType":"88","messageId":"89","endLine":65,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":66,"column":42,"nodeType":"88","messageId":"89","endLine":66,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":67,"column":42,"nodeType":"88","messageId":"89","endLine":67,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":71,"column":38,"nodeType":"88","messageId":"89","endLine":71,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":72,"column":40,"nodeType":"88","messageId":"89","endLine":72,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":73,"column":40,"nodeType":"88","messageId":"89","endLine":73,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":74,"column":40,"nodeType":"88","messageId":"89","endLine":74,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":75,"column":40,"nodeType":"88","messageId":"89","endLine":75,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":79,"column":38,"nodeType":"88","messageId":"89","endLine":79,"endColumn":40},{"ruleId":"86","severity":1,"message":"87","line":80,"column":42,"nodeType":"88","messageId":"89","endLine":80,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":81,"column":42,"nodeType":"88","messageId":"89","endLine":81,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":82,"column":42,"nodeType":"88","messageId":"89","endLine":82,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":83,"column":42,"nodeType":"88","messageId":"89","endLine":83,"endColumn":44},{"ruleId":"81","severity":1,"message":"90","line":92,"column":10,"nodeType":"83","messageId":"84","endLine":92,"endColumn":21},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'prophibitRule' is assigned a value but never used.","Identifier","unusedVar","'emptyPlate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'checkAround' is defined but never used.","no-global-assign","no-unsafe-negation"]